---
- name: add barman repo key
  apt_key:
    url: "https://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc"
- name: add barman repo
  apt_repository:
    filename: barmanrepo
    repo: "deb https://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main"
- name: update cache
  shell: apt update
- name: install barman
  apt:
    name: "barman"
    state: present
- name: barman global configuration
  template:
    src: barman.conf.j2
    dest: "/etc/barman.conf"
  notify: "stop barman"
- name: "barman targets configuration"
  template:
    src: streaming-host.conf.j2
    dest: "/etc/barman.d/{{ item.target_name }}.conf"
  with_items: "{{ hosts }}"
  notify: "stop barman"
- name: setting barman password
  template:
    dest: "/var/lib/barman/.pgpass"
    owner: barman
    mode: 0600
    src: pgpass.j2

- name: create replication slot
  become: yes
  become_user: barman
  command: "barman receive-wal --create-slot {{ item.target_name }}"
  with_items: "{{ hosts }}"
  register: command_result
  failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stderr"
- name: switch-xlog
  become: yes
  become_user: barman
  shell: "barman switch-xlog --force {{ item.target_name }} > /var/lib/barman/switch-xlog.{{ item.target_name }}.done"
  with_items: "{{ hosts }}"
  args:
    creates: /var/lib/barman/switch-xlog.{{ item.target_name }}.done
- name: daily base backup
  cron:
      name: "{{ item.target_name }}_backup"
      cron_file: "{{ item.target_name }}_backup"
      minute: "{{ item.cron_minute | default(0) }}"
      hour: "{{ item.cron_hour | default(4) }}"
      job: "barman backup {{ item.target_name }}"
      user: barman
  with_items: "{{ hosts }}"

- block:
  - name: install aws cli
    become: yes
    become_user: root
    pip:
      name: awscli
  - name: create directory
    file:
      dest: "~/.aws"
      state: directory
  - name: create awscli credentials file
    template:
      dest: ~/.aws/credentials
      src: aws_credentials.j2
  - name: create awscli conf file
    template:
      dest: ~/.aws/config
      src: aws_config.j2
  when: "upload_to_s3"
  become: yes
  become_user: barman
