- name: create postgresql replica users
  postgresql_user:
    name: "{{ item.name }}"
    login_host: "{{ pg_login_host }}"
    login_password: "{{ pg_login_password }}"
    port: "{{ pg_port }}"
    encrypted: yes
    password: "{{ item.password }}"
    role_attr_flags: "{{ item.role_attr_flags }}"
  with_items:
    - { name: barman, password: "{{ barman_user_pass }}", role_attr_flags: 'SUPERUSER,CREATEDB,CREATEROLE,INHERIT,LOGIN'}
    - { name: streaming_barman, password: "{{ barman_user_pass }}", role_attr_flags: 'REPLICATION'}
- name: postgresql configuration for replica
  lineinfile:
    dest: "{{ pg_data_path }}/postgresql.conf"
    line: '{{ item.key }} = {{ item.value }}'
    regexp: '^\s*{{ item.key }}\s*='
    state: present
  with_items:
    - { key: listen_addresses, value: "'*'" }
    - { key: max_wal_senders, value: 4 }
    - { key: wal_level, value: replica }
    - { key: max_replication_slots, value: 2 }
  notify: restart postgres
- name: pg_hba.conf configuration for replica
  lineinfile:
    dest: "{{ pg_data_path }}/pg_hba.conf"
    line: '{{ item.line }}'
    state: present
  with_items:
    - { line: "host all all 0.0.0.0/0 md5" }
    - { line: "host replication all 0.0.0.0/0 md5" }
  notify: restart postgres
