# TODO: move caddy_data_dir and handle moving existing files from default to chosen path
---
- name: create caddy group
  group:
    name: caddy
    state: present
- name: create caddy user
  user:
    name: caddy
    home: "{{ caddy_install_dir }}"
    create_home: yes
    shell: /usr/sbin/nologin
- name: set caddy home permissions
  file:
    dest: "{{ caddy_data_dir }}"
    state: directory
    owner: caddy
    group: root
    mode: "0770"
    recurse: yes
- name: create directory
  file:
    dest: "{{ item }}"
    state: directory
  with_items:
    - "{{ caddy_install_dir }}"
    - "{{ caddy_config_dir }}"
- name: copy caddy bin
  copy:
    src: files/caddy # TODO: obtain caddy from an outside source?
    dest: "{{ caddy_install_dir }}/caddy"
    mode: "0755"
- name: set caddy capabilities
  capabilities:
    path: "{{ caddy_install_dir }}/caddy"
    capability: cap_net_bind_service=+ep
    state: present
  when: (use_systemd_capabilities is not defined) or (use_systemd_capabilities == false)
- name: generate Caddyfile
  copy:
    content: "{{ caddyfile_content }}"
    dest: "{{ caddy_config_dir }}/Caddyfile"
  notify: restart_caddy
- name: install caddy.service
  template:
    src: templates/caddy.service.j2
    dest: /etc/systemd/system/caddy.service
  register: caddy_service
  notify: restart_caddy
- name: "systemctl daemon reload"
  shell: "systemctl daemon-reload"
  when: caddy_service.changed
- name: ensure caddy started
  service:
    name: "caddy.service"
    state: started
    enabled: yes